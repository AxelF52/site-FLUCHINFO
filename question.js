const levels = [
  {
    id: 1,
    title: "Chapitre 1 : Affichage avec print()",
    lesson:
      "üí° La fonction print()\n\n" +
      "En Python, la fonction print() permet d‚Äôafficher du texte ou le contenu d‚Äôune variable dans la console.\n\n" +
      "üß± Syntaxe de base :\n" +
      "print(√©l√©ment_√†_afficher)\n\n" +
      "üìå Pour afficher du texte (une cha√Æne de caract√®res), on l‚Äô√©crit entre guillemets :\n" +
      '‚û°Ô∏è Exemple : print("Bonjour")\n\n' +
      "üìå Pour afficher une variable (d√©j√† d√©finie), on ne met pas de guillemets :\n" +
      "‚û°Ô∏è Exemple :\n" +
      "a = 2\n" +
      "print(a)\n\n" +
      '‚ö†Ô∏è Attention : le texte a besoin de guillemets ("...") mais une variable NON !\n\n' +
      "---\n\n" +
      "üéØ Associer texte + variable :\n\n" +
      "Tu peux combiner du texte et des variables de plusieurs fa√ßons :\n\n" +
      "1Ô∏è‚É£ Avec des virgules (les √©l√©ments sont s√©par√©s automatiquement par un espace) :\n" +
      "‚û°Ô∏è Exemple :\n" +
      "a = 10\n" +
      'print("J\'ai", a, "ans")\n\n' +
      "2Ô∏è‚É£ Avec .format() :\n" +
      "‚û°Ô∏è Exemple :\n" +
      'print("J\'ai {} ans".format(a))\n\n' +
      "Cela place la variable √† la place des accolades {}\n\n" +
      "üß† R√©sum√© :\n" +
      '- print("texte") ‚Üí affiche du texte\n' +
      "- print(variable) ‚Üí affiche une variable\n" +
      '- print("texte", variable) ou print("texte {}".format(variable)) ‚Üí combine les deux\n\n',

    questions: [
      {
        type: "Puzzel",
        number: 1,
        question: "Afficher bonjour",
        choices: ["print", "bonjour", "=", '"', "(", ")", '"', "a"],
        answer: ["print", "(", '"', "bonjour", '"', ")"],
      },
      {
        type: "Troup",
        number: 2,
        question: "Afficher Hello :\nprint(_____)",
        answer: ['print("Hello")', 'print("hello")'],
      },
      {
        type: "Sortie",
        number: 3,
        question: "Donner la sortie du programme :\nprint(2 + 3)",
        answer: ["5"],
      },
      {
        type: "Bool",
        number: 4,
        question:
          "Est ce que le programme suivant est correcte ou comporte une erreur ?\na = 5\nb = 2\nprint(a / b)",
        answer: "correct",
      },
      {
        type: "Puzzel",
        number: 5,
        question:
          "Afficher la phrase : 'J'ai 35 ans', avec comme variable a=35",
        choices: [
          "print",
          "ans",
          "a",
          ",",
          '"',
          '"',
          "(",
          "J'ai",
          ")",
          '"',
          "53",
          '"',
          ",",
        ],
        answer: [
          "print",
          "(",
          '"',
          "J'ai",
          '"',
          ",",
          "a",
          ",",
          '"',
          "ans",
          '"',
          ")",
        ],
      },
      {
        type: "Troup",
        number: 6,
        question: 'Afficher : "Je suis fan du Youtuber x" avec x une variable',
        answer: [
          'print("Je suis fan du Youtuber", x)',
          "print('Je suis fan du Youtuber', x)",
          "print('Je suis fan du Youtuber',x)",
          'print("Je suis fan du Youtuber",x)',
        ],
      },
      {
        type: "Sortie",
        number: 7,
        question: "Donner la sortie du programme :\nx = 14\nprint(x)",
        answer: ["14"],
      },
      {
        type: "Sortie",
        number: 8,
        question:
          "Donner la sortie du programme :\nname = 'Bob'\nprint('Je m'appelle {}'.format(name))",
        answer: ["name"],
      },
      {
        type: "Puzzel",
        number: 9,
        question:
          "Afficher la phrase avec la m√©thode .format : 'Il y a x m√©tre(s) entre a et b'\nAvec a, b et x qui sont des variables",
        choices: [
          "print",
          "Il y a",
          "a",
          ",",
          "{}",
          "{}",
          "{}",
          "format",
          '"',
          "(",
          ".",
          "(",
          ")",
          "m√©tre(s) entre",
          "J'ai",
          ")",
          ",",
          ",",
          '"',
          "et",
          "53",
          ",",
          "y",
          "b",
          "x",
        ],
        answer: [
          "print",
          "(",
          '"',
          "Il y a",
          "{}",
          "m√©tre(s) entre",
          "{}",
          "et",
          "{}",
          '"',
          ".",
          "format",
          "(",
          "x",
          ",",
          "a",
          ",",
          "b",
          ")",
          ")",
        ],
      },
      {
        type: "Sortie",
        number: 10,
        question:
          "Donner la sortie du programme :\nname = 'Axel'\nprint('name')",
        answer: ["name"],
      },
    ],
  },
  {
    id: 2,
    title: "Chapitre 2 : Les varaiables en python",
    lesson:
      "üí° Les variables en Python\n\n" +
      "Une variable sert √† stocker une donn√©e, un objet ou un r√©sultat dans la m√©moire.\n" +
      "On peut ensuite utiliser cette variable √† diff√©rents endroits dans notre code.\n\n" +
      "üß± D√©claration d'une variable :\n" +
      "nom_de_variable = valeur (attention le nom d'une variable ne doit pas contenir d'espace !!)\n\n" +
      "üîπ Exemple simple :\n" +
      "a = 5\n" +
      'nom = "Alice"\n\n' +
      "---\n\n" +
      "üìå Les types de donn√©es qu'on peut stocker :\n\n" +
      "1Ô∏è‚É£ Texte (cha√Æne de caract√®res ou str pour string) ‚Üí entre guillemets :\n" +
      'nom = "Python"\n\n' +
      "2Ô∏è‚É£ Nombre entier (int) :\n" +
      "age = 25\n\n" +
      "3Ô∏è‚É£ Nombre d√©cimal (float) :\n" +
      "note = 14.5\n\n" +
      "4Ô∏è‚É£ Bool√©en (True / False) :\n" +
      "est_connecte = True\n\n" +
      "5Ô∏è‚É£ Liste (tableau d'√©l√©ments) :\n" +
      'fruits = ["pomme", "banane", "kiwi"]\n\n' +
      "6Ô∏è‚É£ Tuple (liste non modifiable) :\n" +
      "coordonnees = (10, 20)\n\n" +
      "7Ô∏è‚É£ Autre variable :\n" +
      "x = 10\n" +
      "y = x  # y vaut maintenant 10 aussi\n\n" +
      "\n\n" +
      "üîß Op√©rations possibles avec des variables :\n\n" +
      "‚ûï Addition :\n" +
      "x = 3\n" +
      "y = 4\n" +
      "z = x + y   # R√©sultat : 7\n\n" +
      "üîó Concat√©nation de texte :\n" +
      'prenom = "Alice"\n' +
      'message = "Bonjour " + prenom\n' +
      "print(message)  # Bonjour Alice\n\n" +
      "üîÅ R√©affecter une variable :\n" +
      "a = 5\n" +
      "a = a + 1 OU a += 1  # maintenant a vaut 6\n\n" +
      "D'autres op√©rateurs existent :\nmultiplication = * \ndivision = / \npuissance = ** \nquotient (division euclidenne) = // \nreste (division euclidenne) = %" +
      "\n\n" +
      "üß† Astuce : Python est dynamique ‚ûú tu n'as pas besoin de pr√©ciser le type,\n" +
      "il le d√©duit automatiquement selon la valeur affect√©e.\n\nCependant s'il on veut conna√Ætre le type d'une variable, il suffit d'afficher son type avec type(). Exemple : \na = 12\nprint(type(variable)) \nLe programme retourne INT qui signifie entier\n\nAttention ! Il n'est pas possilble de faire des op√©ration entre deux type de vraible diff√©rents (hormi INT et Float ensemble)\n\nMais il est aussi possible de changer une varaible de type. Exemple :\nbool = True\nprint(str(bool))\nLe programme retroune 'True', c'est devenu du texte !\n\n" +
      "Tu peux utiliser les variables dans :\n" +
      "- des conditions\n" +
      "- des boucles\n" +
      "- des fonctions\n\n" +
      "‚úÖ En r√©sum√© :\n" +
      "- Une variable se d√©clare avec le signe =\n" +
      "- Elle peut contenir du texte, des chiffres, des listes, ou m√™me d'autres variables\n" +
      "- On peut les r√©utiliser, modifier et combiner √† volont√©\n\n",

    questions: [
      {
        type: "Puzzel",
        number: 1,
        question: "Initialiser la variable Hello √† 'Bonjour'",
        choices: ["'Bonjour'", '"Hello"', "Hello", "Bonjour", "=", "."],
        answer: ["Hello", "=", "'Bonjour'"],
      },
      {
        type: "Troup",
        number: 2,
        question:
          "Ajouter √† b la somme de a et 3, sachant que a est une variable de type INT",
        answer: [
          "b = b + a + 3",
          "b = b + 3 + a",
          "b=b+a+3",
          "b=b+3+a",
          "b+=b+a+3",
          "b+= a + 3",
          "b += a + 3",
          "b += 3 + a",
        ],
      },
      {
        type: "Sortie",
        number: 3,
        question: "Donner la sortie du programme :\npi=3.14\nprint(type(pi))",
        answer: ["float"],
      },
      {
        type: "Bool",
        number: 4,
        question:
          "Est ce que le programme suivant est correcte ou comporte une erreur ?\nrendu monnaie = 4.34",
        answer: "erreur",
      },
      {
        type: "Puzzel",
        number: 5,
        question: "retirer 10 √† z sachant que z = 10",
        choices: ["z", "-=", "10", "'10'", "'z'", "=-"],
        answer: ["z", "-=", "10"],
      },
      {
        type: "Troup",
        number: 6,
        question:
          "Initaliser une variable p √©gal au produit de f1 et f2 sachant que f1 et f2 sont des variables de type INT",
        answer: ["p = f1 * f2", "p=f1*f2", "p = f2 * f1", "p=f2*f1"],
      },
      {
        type: "Sortie",
        number: 7,
        question:
          "Donner la sortie du programme :\nbool = True\nprint(not(bool))",
        answer: ["False"],
      },
      {
        type: "Bool",
        number: 8,
        question:
          "Est ce que le programme suivant est correcte ou comporte une erreur ?\nvariable=false\nprint(variable)",
        answer: "erreur",
      },
      {
        type: "Puzzel",
        number: 9,
        question:
          "Afficher la variable pi sous forme d'entier (sans chiffres apr√®s la virgule) sachant que pi = 3.14",
        choices: ["print", "(", "int", "(", "pi", ")", ")"],
        answer: ["print", "(", "int", "(", "pi", ")", ")"],
      },
      {
        type: "Sortie",
        number: 10,
        question:
          "Donner la sortie du programme :\na, b, c = 1, 2, 3\nprint(b)",
        answer: [2],
      },
    ],
  },
  {
    id: 3,
    title: "Chapitre 3 : Les conditions (if, elif, else)",
    lesson:
      "üí° Les conditions permettent d'ex√©cuter certaines instructions uniquement si une condition est vraie.\n\n" +
      "üß± Syntaxe :\n" +
      "if condition:\n    instruction\n" +
      "elif autre_condition:\n    instruction\n" +
      "else:\n    instruction\n\n" +
      "üîπ Exemple :\n" +
      '√¢ge = 18\nif √¢ge >= 18:\n    print("Majeur")\nelse:\n    print("Mineur")\n\n' +
      "üìå Les op√©rateurs de comparaison : == (√©gal √†), !=(diff√©rent de), <, >, <=, >=\n" +
      "üìå Les op√©rateurs logiques : and, or, not\n\n" +
      "üìç Autres exemples :\n" +
      'note = 15\nif note >= 16:\n    print("Tr√®s bien")\nelif note >= 10:\n    print("Moyen")\nelse:\n    print("Insuffisant")\n\n' +
      "üß† Astuce : Attention √† l'indentation (=alin√©as) ! Tout ce qui est dans un bloc doit √™tre indent√©.",
    questions: [
      {
        type: "Puzzel",
        number: 1,
        question: "Afficher 'OK' si x est √©gal √† 10 sachant que x = 10",
        choices: [
          "x",
          "=",
          "10",
          "if",
          ":",
          "==",
          "print",
          "'OK'",
          "(",
          ")",
          "retours √† la ligne + alin√©a",
        ],
        answer: [
          "if",
          "x",
          "==",
          "10",
          ":",
          "retours √† la ligne + alin√©a",
          "print",
          "(",
          "'OK'",
          ")",
        ],
      },
      {
        type: "Troup",
        number: 2,
        question: "Afficher 'Mineur' si age est inf√©rieur √† 18",
        answer: [
          "if age < 18:\n    print('Mineur')",
          'if age<18:\n    print("Mineur")',
        ],
      },
      {
        type: "Bool",
        number: 3,
        question: "Est-ce que ce code est valide ?\nif a = 5:\n    print(a)",
        answer: "erreur",
      },
      {
        type: "Sortie",
        number: 4,
        question: "Donner la sortie :\nx = 7\nif x > 5:\n'''''print('ok')",
        answer: ["ok"],
      },
      {
        type: "Puzzel",
        number: 5,
        question: "Afficher 'positif' si n >= 0, sinon 'n√©gatif'",
        choices: [
          "if",
          "n",
          ">=",
          "0",
          "print",
          "'positif'",
          "else",
          "print",
          "'n√©gatif'",
          ":",
          "(",
          ")",
          "(",
          ")",
        ],
        answer: [
          "if",
          "n",
          ">=",
          "0",
          ":",
          "print",
          "(",
          "'positif'",
          ")",
          "else",
          ":",
          "print",
          "(",
          "'n√©gatif'",
          ")",
        ],
      },
      {
        type: "Sortie",
        number: 6,
        question:
          "Donner la sortie :\nx = 3\nif x % 2 == 0:\n    print('pair')\nelse:\n    print('impair')",
        answer: ["impair"],
      },
      {
        type: "Troup",
        number: 7,
        question:
          "Afficher 'Acc√®s autoris√©' si mot_de_passe est √©gal √† 'admin'",
        answer: [
          "if mot_de_passe == 'admin':\n    print('Acc√®s autoris√©')",
          'if mot_de_passe == "admin":print("Acc√®s autoris√©")',
        ],
      },
      {
        type: "Bool",
        number: 8,
        question:
          "Ce code est-il correct ?\nif True or False:\n    print('yes')",
        answer: "correct",
      },
      {
        type: "Puzzel",
        number: 9,
        question: "Afficher 'Ado' si age >= 13 et age < 18",
        choices: [
          "if",
          "age",
          ">=",
          "13",
          "and",
          "age",
          "<",
          "18",
          ":",
          "print",
          "(",
          "'Ado'",
          ")",
          "<",
          "and",
        ],
        answer: [
          "if",
          "age",
          ">=",
          "13",
          "and",
          "age",
          "<",
          "18",
          ":",
          "print",
          "(",
          "'Ado'",
          ")",
        ],
      },
      {
        type: "Sortie",
        number: 10,
        question:
          "Donner la sortie :\nnote = 8\nif note >= 10:\n    print('R√©ussi')\nelse:\n    print('√âchec')",
        answer: ["√âchec"],
      },
    ],
  },

  {
    id: 4,
    title: "Chapitre 4 : Les boucles (for, while)",
    lesson:
      "üí° Les boucles permettent de r√©p√©ter un bloc d'instructions plusieurs fois.\n\n" +
      "üîÅ La boucle for (quand on conna√Æt le nombre d‚Äôit√©rations) :\nfor i in range(n):\n    instruction\n\n" +
      "üîÑ La boucle while (tant qu'une condition est vraie) :\nwhile condition:\n    instruction\n\n" +
      "üîπ Exemple for :\nfor i in range(3):\n    print(i)  # 0, 1, 2\n\n" +
      "üîπ Exemple while :\nx = 0\nwhile x < 3:\n    print(x)\n    x += 1\n\n" +
      "üìå La fonction range(n) g√©n√®re les nombres de 0 jusqu‚Äô√† n-1.\nüìå Pour √©viter les boucles infinies, il faut modifier la condition dans la boucle while !\n\n" +
      "üéØ Astuce : Utilise for pour les listes, et while pour les conditions dynamiques.",
    questions: [
      {
        type: "Troup",
        number: 1,
        question: "Afficher les nombres de 0 √† 4 avec une boucle for",
        answer: [
          "for i in range(5):\n    print(i)",
          "for i in range(0,5):\n    print(i)",
        ],
      },
      {
        type: "Sortie",
        number: 2,
        question:
          "Donner la sortie du code :\ni = 0\nwhile i < 3:\n    print(i)\n    i += 1",
        answer: ["0", "1", "2"],
      },
      {
        type: "Bool",
        number: 3,
        question:
          "Ce code tourne-t-il √† l'infini ?\nx = 0\nwhile x < 5:\n    print(x)",
        answer: "oui",
      },
      {
        type: "Puzzel",
        number: 4,
        question: "Compl√©ter : afficher tous les √©l√©ments de la liste fruits",
        choices: [
          "for",
          "in",
          "fruit",
          "fruits",
          ":",
          "print",
          "(",
          "fruit",
          ")",
        ],
        answer: [
          "for",
          "fruit",
          "in",
          "fruits",
          ":",
          "print",
          "(",
          "fruit",
          ")",
        ],
      },
      {
        type: "Troup",
        number: 5,
        question: "Afficher les nombres pairs de 0 √† 10 avec une boucle for",
        answer: ["for i in range(0, 11, 2):\n    print(i)"],
      },
      {
        type: "Puzzel",
        number: 6,
        question: "Boucle while qui d√©cr√©mente x de 5 √† 1",
        choices: [
          "x",
          "=",
          "5",
          "while",
          "x",
          ">",
          "0",
          ":",
          "print",
          "(",
          "x",
          ")",
          "x",
          "-=",
          "1",
        ],
        answer: [
          "x",
          "=",
          "5",
          "while",
          "x",
          ">",
          "0",
          ":",
          "print",
          "(",
          "x",
          ")",
          "x",
          "-=",
          "1",
        ],
      },
      {
        type: "Sortie",
        number: 7,
        question: "Donner la sortie :\nfor i in range(3):\n    print(i * 2)",
        answer: ["0", "2", "4"],
      },
      {
        type: "Bool",
        number: 8,
        question: "Ce code est-il correct ?\nfor x in range(5)\n    print(x)",
        answer: "erreur",
      },
      {
        type: "Troup",
        number: 9,
        question: "Afficher chaque caract√®re de la cha√Æne 'chat'",
        answer: ["for lettre in 'chat':\n    print(lettre)"],
      },
      {
        type: "Puzzel",
        number: 10,
        question: "Boucle for qui affiche 5 fois 'Hello'",
        choices: ["for", "in", "range", "5", ":", "print", "(", "'Hello'", ")"],
        answer: [
          "for",
          "i",
          "in",
          "range",
          "(",
          "5",
          ")",
          ":",
          "print",
          "(",
          "'Hello'",
          ")",
        ],
      },
    ],
  },

  {
    id: 5,
    title: "Chapitre 5 : Les fonctions",
    lesson:
      "üí° Une fonction est un bloc de code r√©utilisable que l'on peut appeler avec un nom, et qui peut prendre des param√®tres.\n\n" +
      "üß± D√©claration d'une fonction :\ndef nom_de_fonction(param√®tres):\n    instruction\n\n" +
      'üîπ Exemple :\ndef saluer():\n    print("Bonjour !")\n\n' +
      'üîπ Exemple avec param√®tre :\ndef bonjour(nom):\n    print("Bonjour", nom)\n\n' +
      'üìå Appel : saluer() ou bonjour("Alice")\n\n' +
      "üéØ Une fonction peut aussi **retourner** une valeur avec `return`.\n\n" +
      "üîπ Exemple de fonction avec `return` :\n" +
      "def addition(a, b):\n    return a + b\n\n" +
      "üìå Une fonction peut √™tre appel√©e plusieurs fois avec des valeurs diff√©rentes.",
    questions: [
      {
        type: "Troup",
        number: 1,
        question: "Cr√©er une fonction qui affiche 'Coucou'",
        answer: [
          "def dire_bonjour():\n    print('Coucou')",
          'def dire_bonjour():\n    print("Coucou")',
        ],
      },
      {
        type: "Puzzel",
        number: 2,
        question: "Cr√©er une fonction appel√©e somme qui retourne a + b",
        choices: [
          "def",
          "somme",
          "(",
          "a",
          ",",
          "b",
          ")",
          ":",
          "return",
          "a",
          "+",
          "b",
        ],
        answer: [
          "def",
          "somme",
          "(",
          "a",
          ",",
          "b",
          ")",
          ":",
          "return",
          "a",
          "+",
          "b",
        ],
      },
      {
        type: "Sortie",
        number: 3,
        question:
          "Donner la sortie du code suivant :\ndef identite(nom):\n    return \"Je suis \" + nom\nprint(identite('Sam'))",
        answer: ["Je suis Sam"],
      },
      {
        type: "Bool",
        number: 4,
        question: "Est-ce correct ?\ndef f(x):\nprint(x)",
        answer: "erreur",
      },
      {
        type: "Troup",
        number: 5,
        question:
          "Cr√©er une fonction qui prend deux param√®tres, x et y, et retourne leur produit",
        answer: ["def multiplier(x, y):\n    return x * y"],
      },
      {
        type: "Puzzel",
        number: 6,
        question:
          "Cr√©er une fonction qui affiche la phrase 'Salut {nom}' o√π nom est un param√®tre",
        choices: [
          "def",
          "saluer",
          "(",
          "nom",
          ")",
          ":",
          "print",
          "(",
          "'Salut '",
          "+",
          "nom",
          ")",
        ],
        answer: [
          "def",
          "saluer",
          "(",
          "nom",
          ")",
          ":",
          "print",
          "(",
          "'Salut '",
          "+",
          "nom",
          ")",
        ],
      },
      {
        type: "Sortie",
        number: 7,
        question:
          "Donner la sortie du code suivant :\ndef carre(x):\n    return x * x\nprint(carre(4))",
        answer: ["16"],
      },
      {
        type: "Bool",
        number: 8,
        question: "Est-ce correct ?\nif f():\n    print('ok')",
        answer: "erreur",
      },
      {
        type: "Troup",
        number: 9,
        question:
          "Cr√©er une fonction qui renvoie True si le nombre est pair, sinon False",
        answer: ["def est_pair(n):\n    return n % 2 == 0"],
      },
      {
        type: "Puzzel",
        number: 10,
        question:
          "Compl√©ter le code pour que la fonction addition retourne la somme de 5 et 8",
        choices: [
          "def",
          "addition",
          "(",
          "a",
          ",",
          "b",
          ")",
          ":",
          "return",
          "a",
          "+",
          "b",
        ],
        answer: [
          "def",
          "addition",
          "(",
          "a",
          ",",
          "b",
          ")",
          ":",
          "return",
          "a",
          "+",
          "b",
        ],
      },
    ],
  },
  {
    id: 6,
    title: "Chapitre 6 : Les listes",
    lesson:
      "üì¶ Une liste est une structure de donn√©es qui peut contenir plusieurs √©l√©ments (nombres, cha√Ænes, etc.).\n\n" +
      "üß± D√©claration :\nma_liste = [1, 2, 3, 4]\n\n" +
      "üî¢ Acc√®s √† un √©l√©ment :\nprint(ma_liste[0])  # Affiche 1\n\n" +
      "üîÅ Parcourir une liste :\nfor element in ma_liste:\n    print(element)\n\n" +
      "üîß Fonctions utiles :\n- len(liste) : retourne la taille\n- liste.append(x) : ajoute un √©l√©ment\n- liste.remove(x) : supprime le premier x\n- liste.pop(i) : supprime l‚Äô√©l√©ment √† l‚Äôindex i\n- liste.sort() : trie la liste\n\n" +
      "üìå Les indices commencent √† 0\nüìå Les listes peuvent contenir des √©l√©ments de types diff√©rents\n\n" +
      "üß† Astuce : Tu peux modifier une liste en assignant directement une valeur √† un index (ex: liste[0] = 99)",
    questions: [
      {
        type: "Troup",
        number: 1,
        question: "Cr√©er une liste contenant les nombres 1, 2, 3",
        answer: ["ma_liste = [1, 2, 3]"],
      },
      {
        type: "Puzzel",
        number: 2,
        question: "Afficher le premier √©l√©ment de la liste fruits",
        choices: ["print", "(", "fruits", "[", "0", "]", ")"],
        answer: ["print", "(", "fruits", "[", "0", "]", ")"],
      },
      {
        type: "Sortie",
        number: 3,
        question:
          "Donner la sortie :\nanimaux = ['chat', 'chien']\nprint(len(animaux))",
        answer: ["2"],
      },
      {
        type: "Bool",
        number: 4,
        question:
          "Ce code est-il correct ?\nma_liste = [1, 2, 3]\nprint(ma_liste[3])",
        answer: "erreur",
      },
      {
        type: "Troup",
        number: 5,
        question: "Ajouter le nombre 4 √† la fin de la liste chiffres",
        answer: ["chiffres.append(4)"],
      },
      {
        type: "Puzzel",
        number: 6,
        question: "Supprimer 'banane' de la liste fruits",
        choices: ["fruits", ".", "remove", "(", "'banane'", ")"],
        answer: ["fruits", ".", "remove", "(", "'banane'", ")"],
      },
      {
        type: "Sortie",
        number: 7,
        question:
          "Donner la sortie :\nnotes = [10, 20, 15]\nnotes.sort()\nprint(notes)",
        answer: ["[10, 15, 20]"],
      },
      {
        type: "Bool",
        number: 8,
        question: "Est-ce correct ?\nliste = []\nliste.append('ok')",
        answer: "oui",
      },
      {
        type: "Troup",
        number: 9,
        question:
          "Afficher tous les √©l√©ments de la liste animaux avec une boucle",
        answer: ["for animal in animaux:\n    print(animal)"],
      },
      {
        type: "Puzzel",
        number: 10,
        question: "Remplacer le premier √©l√©ment de la liste par 100",
        choices: ["liste", "[", "0", "]", "=", "100"],
        answer: ["liste", "[", "0", "]", "=", "100"],
      },
    ],
  },
  {
    id: 7,
    title: "Chapitre 7 : Les dictionnaires",
    lesson:
      "üóÉÔ∏è Un dictionnaire permet de stocker des donn√©es sous forme de paires **cl√©:valeur**.\n\n" +
      "üß± D√©claration :\npersonne = { 'nom': 'Alice', '√¢ge': 30 }\n\n" +
      "üîç Acc√©der √† une valeur :\nprint(personne['nom'])  # Affiche 'Alice'\n\n" +
      "‚ûï Ajouter ou modifier :\npersonne['ville'] = 'Paris'\npersonne['√¢ge'] = 31\n\n" +
      "‚ùå Supprimer une cl√© :\ndel personne['ville']\n\n" +
      "üîÑ Parcourir un dictionnaire :\nfor cl√© in personne:\n    print(cl√©, personne[cl√©])\n\n" +
      "üìå Les cl√©s sont uniques\nüìå Les valeurs peuvent √™tre de tout type (nombres, cha√Ænes, listes‚Ä¶)\n\n" +
      "üìö Fonctions utiles :\n- dict.keys() : liste des cl√©s\n- dict.values() : liste des valeurs\n- dict.items() : liste des paires (cl√©, valeur)",
    questions: [
      {
        type: "Troup",
        number: 1,
        question:
          "Cr√©er un dictionnaire personne avec 'nom' = 'L√©o' et '√¢ge' = 25",
        answer: [
          "personne = { 'nom': 'L√©o', '√¢ge': 25 }",
          "personne = {'nom': 'L√©o', '√¢ge': 25}",
        ],
      },
      {
        type: "Puzzel",
        number: 2,
        question: "Afficher la valeur associ√©e √† la cl√© 'nom'",
        choices: ["print", "(", "personne", "[", "'nom'", "]", ")"],
        answer: ["print", "(", "personne", "[", "'nom'", "]", ")"],
      },
      {
        type: "Sortie",
        number: 3,
        question:
          "Donner la sortie :\nd = { 'x': 10 }\nd['x'] += 5\nprint(d['x'])",
        answer: ["15"],
      },
      {
        type: "Bool",
        number: 4,
        question:
          "Ce code est-il correct ?\ninfo = { 'nom': 'Sam' }\nprint(info['age'])",
        answer: "erreur",
      },
      {
        type: "Troup",
        number: 5,
        question:
          "Ajouter une cl√© 'ville' avec la valeur 'Paris' au dictionnaire personne",
        answer: ["personne['ville'] = 'Paris'"],
      },
      {
        type: "Puzzel",
        number: 6,
        question: "Supprimer la cl√© '√¢ge' du dictionnaire",
        choices: ["del", "personne", "[", "'√¢ge'", "]"],
        answer: ["del", "personne", "[", "'√¢ge'", "]"],
      },
      {
        type: "Sortie",
        number: 7,
        question:
          "Donner la sortie :\ninfos = {'a':1, 'b':2}\nfor k in infos:\n    print(k)",
        answer: ["a", "b"],
      },
      {
        type: "Bool",
        number: 8,
        question:
          "Ce code est-il correct ?\nd = {'a': 1, 'a': 2}\nprint(d['a'])",
        answer: "oui",
      },
      {
        type: "Troup",
        number: 9,
        question:
          "Parcourir les paires (cl√© et valeur) du dictionnaire utilisateur",
        answer: [
          "for cl√©, valeur in utilisateur.items():\n    print(cl√©, valeur)",
        ],
      },
      {
        type: "Puzzel",
        number: 10,
        question: "Afficher toutes les valeurs d‚Äôun dictionnaire",
        choices: [
          "for",
          "v",
          "in",
          "dico",
          ".",
          "values",
          "(",
          ")",
          ":",
          "print",
          "(",
          "v",
          ")",
        ],
        answer: [
          "for",
          "v",
          "in",
          "dico",
          ".",
          "values",
          "(",
          ")",
          ":",
          "print",
          "(",
          "v",
          ")",
        ],
      },
    ],
  },
  {
    id: 9,
    title: "Chapitre 9 : Algorithmie de base",
    lesson:
      "üß† L‚Äôalgorithmie consiste √† r√©soudre des probl√®mes √©tape par √©tape √† l‚Äôaide de code.\n\n" +
      "üìå Les outils essentiels :\n- Variables\n- Boucles\n- Conditions\n- Fonctions\n\n" +
      "üéØ Exemples de probl√®mes classiques :\n" +
      "- Calculer la somme des √©l√©ments d‚Äôune liste\n" +
      "- Trouver le plus grand √©l√©ment\n" +
      "- Rechercher un √©l√©ment dans une liste\n" +
      "- Compter les occurrences\n" +
      "- Trier une liste\n\n" +
      "üîß Exemple - somme d'une liste :\n" +
      "nombres = [1, 2, 3]\nsomme = 0\nfor n in nombres:\n    somme += n\nprint(somme)  # 6\n\n" +
      "üîß Exemple - trouver le max :\n" +
      "max_val = nombres[0]\nfor n in nombres:\n    if n > max_val:\n        max_val = n\nprint(max_val)\n\n" +
      "üí° Ces algorithmes sont la base de la r√©solution de probl√®mes en Python.",
    questions: [
      {
        type: "Troup",
        number: 1,
        question: "Calculer la somme des √©l√©ments de la liste notes",
        answer: [
          "somme = 0\nfor note in notes:\n    somme += note\nprint(somme)",
        ],
      },
      {
        type: "Puzzel",
        number: 2,
        question: "Trouver le plus grand nombre dans la liste valeurs",
        choices: [
          "maxi",
          "=",
          "valeurs",
          "[",
          "0",
          "]",
          "for",
          "v",
          "in",
          "valeurs",
          ":",
          "if",
          "v",
          ">",
          "maxi",
          ":",
          "maxi",
          "=",
          "v",
        ],
        answer: [
          "maxi",
          "=",
          "valeurs",
          "[",
          "0",
          "]",
          "for",
          "v",
          "in",
          "valeurs",
          ":",
          "if",
          "v",
          ">",
          "maxi",
          ":",
          "maxi",
          "=",
          "v",
        ],
      },
      {
        type: "Sortie",
        number: 3,
        question:
          "Donner la sortie :\nn = [1, 2, 3, 4]\nres = 1\nfor x in n:\n    res *= x\nprint(res)",
        answer: ["24"],
      },
      {
        type: "Bool",
        number: 4,
        question:
          "Ce code retourne-t-il la bonne moyenne ?\ns = sum(notes)/len(notes)",
        answer: "oui",
      },
      {
        type: "Troup",
        number: 5,
        question: "Compter combien de fois 'a' appara√Æt dans la liste lettres",
        answer: [
          "compte = 0\nfor l in lettres:\n    if l == 'a':\n        compte += 1\nprint(compte)",
        ],
      },
      {
        type: "Puzzel",
        number: 6,
        question:
          "Rechercher 10 dans la liste chiffres et afficher 'trouv√©' si pr√©sent",
        choices: [
          "for",
          "c",
          "in",
          "chiffres",
          ":",
          "if",
          "c",
          "==",
          "10",
          ":",
          "print",
          "(",
          "'trouv√©'",
          ")",
        ],
        answer: [
          "for",
          "c",
          "in",
          "chiffres",
          ":",
          "if",
          "c",
          "==",
          "10",
          ":",
          "print",
          "(",
          "'trouv√©'",
          ")",
        ],
      },
      {
        type: "Sortie",
        number: 7,
        question: "Donner la sortie :\nl = [3, 1, 2]\nl.sort()\nprint(l)",
        answer: ["[1, 2, 3]"],
      },
      {
        type: "Bool",
        number: 8,
        question: "Ce code renvoie-t-il le plus petit √©l√©ment ?\nmin(liste)",
        answer: "oui",
      },
      {
        type: "Troup",
        number: 9,
        question: "√âcrire un algorithme qui inverse une liste appel√©e donn√©es",
        answer: ["donnees.reverse()", "donnees = donnees[::-1]"],
      },
      {
        type: "Puzzel",
        number: 10,
        question: "Cr√©er une liste tri√©e sans modifier l‚Äôoriginale",
        choices: ["tri√©e", "=", "sorted", "(", "liste", ")"],
        answer: ["tri√©e", "=", "sorted", "(", "liste", ")"],
      },
    ],
  },
];
